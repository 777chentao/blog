(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{558:function(a,e,t){"use strict";t.r(e);var s=t(6),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"position-relative"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#position-relative"}},[a._v("#")]),a._v(" position:relative")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("只有relative，则offset相对于当前元素位置进行\n")])])]),t("h2",{attrs:{id:"父relative-子absolute"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#父relative-子absolute"}},[a._v("#")]),a._v(" 父relative+子absolute")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("子的offset相对于父元素位置\n")])])]),t("h2",{attrs:{id:"position-fixed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#position-fixed"}},[a._v("#")]),a._v(" position:fixed")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("只有fixed，则相对于浏览器位置。且不随滚轮移动\n")])])]),t("h2",{attrs:{id:"float"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#float"}},[a._v("#")]),a._v(" float")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("与width一起使用，将会把该元素从正常流中抽离出来并被推到父元素的左边或者右边\n")])])]),t("h2",{attrs:{id:"z-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#z-index"}},[a._v("#")]),a._v(" z-index")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("一个元素的 z-index 属性值较高时，它在堆栈中的位置比那些值较低的值高。必须为整数\n")])])]),t("h2",{attrs:{id:"margin-auto"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#margin-auto"}},[a._v("#")]),a._v(" margin:auto")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("另一种定位技术是将块元素水平居中。一种方法是将其边距设置为 auto 值。 此方法也适用于图像。默认情况下，图像是内联元素，但是当您将 display 属性设置为 block 时，可以将其更改为块元素。\n")])])]),t("h2",{attrs:{id:"flex-容器属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-容器属性"}},[a._v("#")]),a._v(" flex（容器属性）")]),a._v(" "),t("p",[a._v("任何一个容器都可以指定为Flex布局。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".box{\n  display: flex;\n}\n")])])]),t("p",[a._v("行内元素也可以使用Flex布局。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".box{\n  display: inline-flex;\n}\n")])])]),t("p",[a._v("Webkit内核的浏览器，必须加上-webkit前缀。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".box{\n  display: -webkit-flex; /* Safari */\n  display: flex;\n}\n")])])]),t("p",[a._v("注意，设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。")]),a._v(" "),t("h3",{attrs:{id:"flex-direction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-direction"}},[a._v("#")]),a._v(" flex-direction")]),a._v(" "),t("p",[a._v("决定主轴的方向（即项目的排列方向）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".box {\n  flex-direction: row | row-reverse | column | column-reverse;\n}\n")])])]),t("ul",[t("li",[a._v("row（默认值）：主轴为水平方向，起点在左端。")]),a._v(" "),t("li",[a._v("row-reverse：主轴为水平方向，起点在右端。")]),a._v(" "),t("li",[a._v("column：主轴为垂直方向，起点在上沿。")]),a._v(" "),t("li",[a._v("column-reverse：主轴为垂直方向，起点在下沿。")])]),a._v(" "),t("h3",{attrs:{id:"flex-wrap"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-wrap"}},[a._v("#")]),a._v(" flex-wrap")]),a._v(" "),t("p",[a._v("项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".box{\n  flex-wrap: nowrap | wrap | wrap-reverse;\n}\n")])])]),t("p",[a._v("nowrap（默认）：不换行。")]),a._v(" "),t("p",[a._v("wrap：换行，第一行在上方。")]),a._v(" "),t("p",[a._v("wrap-reverse：换行，第一行在下方。")]),a._v(" "),t("h3",{attrs:{id:"flex-flow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-flow"}},[a._v("#")]),a._v(" flex-flow")]),a._v(" "),t("p",[a._v("flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".box {\n  flex-flow: <flex-direction> <flex-wrap>;\n}\n")])])]),t("h3",{attrs:{id:"justify-content"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#justify-content"}},[a._v("#")]),a._v(" justify-content")]),a._v(" "),t("p",[a._v("定义了项目在主轴上的对齐方式。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".box {\n  justify-content: flex-start | flex-end | center | space-between | space-around;\n}\n")])])]),t("ul",[t("li",[a._v("flex-start（默认值）：左对齐")]),a._v(" "),t("li",[a._v("flex-end：右对齐")]),a._v(" "),t("li",[a._v("center： 居中")]),a._v(" "),t("li",[a._v("space-between：两端对齐，项目之间的间隔都相等。")]),a._v(" "),t("li",[a._v("space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。")])]),a._v(" "),t("h3",{attrs:{id:"align-items"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#align-items"}},[a._v("#")]),a._v(" align-items")]),a._v(" "),t("p",[a._v("定义项目在交叉轴上如何对齐。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".box {\n  align-items: flex-start | flex-end | center | baseline | stretch;\n}\n")])])]),t("ul",[t("li",[a._v("flex-start：交叉轴的起点对齐。")]),a._v(" "),t("li",[a._v("flex-end：交叉轴的终点对齐。")]),a._v(" "),t("li",[a._v("center：交叉轴的中点对齐。")]),a._v(" "),t("li",[a._v("baseline: 项目的第一行文字的基线对齐。")]),a._v(" "),t("li",[a._v("stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。")])]),a._v(" "),t("h3",{attrs:{id:"align-content"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#align-content"}},[a._v("#")]),a._v(" align-content")]),a._v(" "),t("p",[a._v("定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".box {\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\n}\n")])])]),t("ul",[t("li",[a._v("flex-start：与交叉轴的起点对齐。")]),a._v(" "),t("li",[a._v("flex-end：与交叉轴的终点对齐。")]),a._v(" "),t("li",[a._v("center：与交叉轴的中点对齐。")]),a._v(" "),t("li",[a._v("space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。")]),a._v(" "),t("li",[a._v("space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。")]),a._v(" "),t("li",[a._v("stretch（默认值）：轴线占满整个交叉轴。")])]),a._v(" "),t("h2",{attrs:{id:"flex-项目属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-项目属性"}},[a._v("#")]),a._v(" flex（项目属性）")]),a._v(" "),t("h3",{attrs:{id:"order"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order"}},[a._v("#")]),a._v(" order")]),a._v(" "),t("p",[a._v("定义项目的排列顺序。数值越小，排列越靠前，默认为0。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".item {\n  order: <integer>;\n}\n")])])]),t("h3",{attrs:{id:"flex-grow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-grow"}},[a._v("#")]),a._v(" flex-grow")]),a._v(" "),t("p",[a._v("定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".item {\n  flex-grow: <number>; /* default 0 */\n}\n")])])]),t("h3",{attrs:{id:"flex-shrink"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-shrink"}},[a._v("#")]),a._v(" flex-shrink")]),a._v(" "),t("p",[a._v("定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".item {\n  flex-shrink: <number>; /* default 1 */\n}\n")])])]),t("h3",{attrs:{id:"flex-basis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex-basis"}},[a._v("#")]),a._v(" flex-basis")]),a._v(" "),t("p",[a._v("定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".item {\n  flex-basis: <length> | auto; /* default auto */\n}\n")])])]),t("p",[a._v("它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。")]),a._v(" "),t("h3",{attrs:{id:"flex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[a._v("#")]),a._v(" flex")]),a._v(" "),t("p",[a._v("lex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".item {\n  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\n}\n")])])]),t("p",[a._v("该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。")]),a._v(" "),t("p",[a._v("建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。")]),a._v(" "),t("h3",{attrs:{id:"align-self"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#align-self"}},[a._v("#")]),a._v(" align-self")]),a._v(" "),t("p",[a._v("允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".item {\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\n}\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);