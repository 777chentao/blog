(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{549:function(a,t,s){"use strict";s.r(t);var n=s(6),r=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("从入学之初就跟着师兄一起做一个 PyQt5 的项目，学到了很多东西。自从上次项目打包遇到资源文件处理难题之后，就开始慢慢在项目中引入 Qt 提供的 qrc 资源文件方案。")]),a._v(" "),s("p",[a._v("最近在系统地学 PySide2（Qt for python 的官方绑定），在其官方教程中有一个"),s("a",{attrs:{href:"https://doc.qt.io/qtforpython/tutorials/datavisualize/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Data Visualization Tool Tutorial"),s("OutboundLink")],1),a._v("的数据可视化教程。在该教程中，用到了 pandas 库来读取一个本地 CSV 文件。教程本身提供的是相对路径读取文件方法，但本人想使用 qrc 资源文件的方式来引入该 CSV 文件，以培养习惯。不曾想，遇到了 pandas 无法读取 CSV 文件的错误，在解决过程中对 qrc 资源文件的运作方式有了更深的理解。")]),a._v(" "),s("h2",{attrs:{id:"问题重现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题重现"}},[a._v("#")]),a._v(" 问题重现")]),a._v(" "),s("p",[a._v("首先我的项目目录结构为")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("D:.\n└─DataVisualization\n    │  main.py\n    │\n    ├─layouts\n    │      main.ui\n    │\n    └─resources\n        │  all_day.csv\n        │  data.qrc\n        │  data_rc.py\n")])])]),s("p",[a._v("data.qrc 代码为")]),a._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("RCC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("qresource")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("prefix")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("all_day.csv"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("qresource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("RCC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),s("p",[a._v("在 main.py 中，按照正常的相对路径写法，能够正确打印 CSV 文件内容，而使用 qrc 资源文件方法则不可行，具体代码为")]),a._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" pandas "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" pd\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" PySide2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("QtCore "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" QFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" QIODevice\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" DataVisualization"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("resources"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data_rc\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"__main__"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    data "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" pd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("read_csv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('":/data/all_day.csv"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# data = pd.read_csv(r"DataVisualization\\resources\\all_day.csv")')]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("运行此 main.py 报错 "),s("code",[a._v("FileNotFoundError")]),a._v(" ，而使用注释内的语句则能够正常显示 CSV 文件内容。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("FileNotFoundError: "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Errno "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" File b"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("':/data/all_day.csv'")]),a._v(" does not exist: b"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("':/data/all_day.csv'")]),a._v("\n")])])]),s("h2",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[a._v("#")]),a._v(" 解决方案")]),a._v(" "),s("p",[a._v("经过长时间的谷歌，终于从"),s("a",{attrs:{href:"https://stackoverflow.com/questions/52950601/create-a-pandas-dataframe-from-a-qrc-resource-file",target:"_blank",rel:"noopener noreferrer"}},[a._v("stack overflow"),s("OutboundLink")],1),a._v("找到了解决方案及原因。")]),a._v(" "),s("p",[a._v("总的来说，就是因为作为 Qt 内部使用的资源管理方案，只有 Qt 本身知道如何正确地从该资源文件中得到所需文件正确的路径并读取，而外界库甚至 python 自身也不能得到文件的具体路径。")]),a._v(" "),s("p",[a._v("既然外界读不到信息是因为找不到文件的具体路径，那么解决方案也就呼之欲出了：跳过路径，直接让 Qt 程序告诉第三方库所需文件的内容。")]),a._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" io\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" pandas "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("as")]),a._v(" pd\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" PySide2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("QtCore "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" QFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" QIODevice\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" DataVisualization"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("resources"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data_rc\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"__main__"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("file")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" QFile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('":/data/all_day.csv"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("QIODevice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ReadOnly"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        f "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" io"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("BytesIO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("readAll"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        data "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" pd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("read_csv"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("值得注意的是，这里 pandas.read_csv()通过此方案可行的原因是，read_csv()支持传入的参数既可以是文件路径也可以是 buffer。对于其他某些接口可能必须要文件路径的则此路不通。")]),a._v(" "),s("h2",{attrs:{id:"深入思考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#深入思考"}},[a._v("#")]),a._v(" 深入思考")]),a._v(" "),s("h3",{attrs:{id:"qrc-的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qrc-的原理"}},[a._v("#")]),a._v(" qrc 的原理")]),a._v(" "),s("p",[a._v("直接上结论：qrc 文件本身类似于一个 XML 格式的文本，其记录了所包含的每一个文件的路径。关键在于，使用 rcc/pyrcc5/pyside2-rcc 对该文件进行编译时，程序遍历 qrc 文件里面的每一个文件路径，将该文件的二进制内容写入到相应的输出文件里。")]),a._v(" "),s("p",[a._v("例如，本文使用的 all_day.csv 文件是一个纯文本文件，其文件大小为 56.4KB；包含该文件路径信息的 data.qrc 文件大小为 85 字节；通过 pyside2-rcc.exe 编译生成的 data_rc.py 文件大小为 70.7KB。此外，当我编译完成了 data_rc.py 之后，即使我删除 all_day.csv 文件，程序照样能够正常运行并读取 all_day.csv 里面的数据。除了 pyside2-rcc.exe 将 all_day.csv 的所有信息统统写进了编译生成的 data_rc.py 这种解释外，我实在想不到为什么一个 py 文件能够达到 70.7KB。")]),a._v(" "),s("p",[a._v("有了这样的结论，也就很好解释 qrc 文件的一些相关特性了，例如：")]),a._v(" "),s("ol",[s("li",[a._v("目标程序里所有内嵌的资源文件都是只读的，在程序运行时不能修改资源里的文件，只能读取使用。")]),a._v(" "),s("li",[a._v("当你修改了 qrc 资源文件包含的任意文件之后，你必须重复"),s("strong",[a._v("添加-编译")]),a._v("的操作才能使更改生效。")]),a._v(" "),s("li",[a._v("除了 Qt 之外的程序想要直接从编译后的文件里面获取信息几乎是不可能的，必须要借助 Qt 内部接口读取资源文件信息。")])]),a._v(" "),s("h3",{attrs:{id:"qrc-使用的其他注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qrc-使用的其他注意事项"}},[a._v("#")]),a._v(" qrc 使用的其他注意事项")]),a._v(" "),s("ol",[s("li",[a._v("为了管理方便，需要编译进 qrc 资源文件的那些文件最好放在 qrc 的所在文件夹或者其子文件夹内。")]),a._v(" "),s("li",[a._v("在不加前缀（prefix）的前提下，在程序中调用同级资源文件可以使用 "),s("code",[a._v('(":file_name")')]),a._v(" 如 "),s("code",[a._v('file = QFile(":/all_day.csv")')]),a._v(" ；调用子目录资源文件可以用 "),s("code",[a._v('(":path/to/file")')]),a._v(" 如 "),s("code",[a._v('file = QFile(":/resources/all_day.csv")')]),a._v(" 。")]),a._v(" "),s("li",[a._v("在加前缀的情况下，在程序中调用同级资源文件可以使用 "),s("code",[a._v('(":/prefix/file_name")')]),a._v(" 如 "),s("code",[a._v('file = QFile(":/data/all_day.csv")')]),a._v(" ；调用子目录资源文件可以用 "),s("code",[a._v('(":/prefix/path/to/file")')]),a._v(" 如 "),s("code",[a._v('file = QFile(":/data/resources/all_day.csv")')]),a._v(" 。")]),a._v(" "),s("li",[a._v("对于文件大小超过 4M 的文件，不建议直接编译，而是使用选项 "),s("code",[a._v("-binary")]),a._v(" ，具体文档看"),s("a",{attrs:{href:"https://doc.qt.io/qt-5/resources.html#external-binary-resources",target:"_blank",rel:"noopener noreferrer"}},[a._v("这里"),s("OutboundLink")],1),a._v("。另外，在 Qt 的 python 绑定中不支持 "),s("code",[a._v("-binary")]),a._v(" 。")])]),a._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("作为一个 PySide2 的入门者，我还有很多东西要学习，包括 qrc 也还有很多方面是一知半解的。如果对于 qrc 有什么好的见解，或者文章中有什么错误，希望能够多多交流。")])])}),[],!1,null,null,null);t.default=r.exports}}]);