(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{539:function(s,t,a){s.exports=a.p+"assets/img/mac-iterm-oh-my-posh-profile.e2e53419.png"},604:function(s,t,a){"use strict";a.r(t);var e=a(6),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("云服务器，作为我们组里面重要的资产，承载着众多提高团队协作效率的开源软件。要想成为一名合格的运维人员，免不了时不时地登录到服务器后台，进行软件的升级维护，同时对现有的软件进行配置上的更改。然而服务器自带的终端乏善可陈，无论是功能还是美观度上都让人提不起兴趣。所谓工欲善其事，必先利其器。我们有必要对 ssh 后的终端进行改造，增强其功能以提升我们的效率，美化其外观以愉悦我们的心情。")]),s._v(" "),e("p",[s._v("本篇是云服务器使用指南的第二篇，主要内容涵盖：")]),s._v(" "),e("ol",[e("li",[s._v("切换 bash 到 zsh")]),s._v(" "),e("li",[s._v("zsh 效率插件推荐")]),s._v(" "),e("li",[s._v("zsh 美化插件推荐")]),s._v(" "),e("li",[s._v("常用软件的介绍与安装")])]),s._v(" "),e("h2",{attrs:{id:"切换-bash-到-zsh"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切换-bash-到-zsh"}},[s._v("#")]),s._v(" 切换 bash 到 zsh")]),s._v(" "),e("p",[s._v("通常来说，我们通过 ssh 登录到服务器之后显示的那个命令提示行窗口所使用的 "),e("a",{attrs:{href:"https://baike.baidu.com/item/shell/99702",target:"_blank",rel:"noopener noreferrer"}},[s._v("shell"),e("OutboundLink")],1),s._v(" 是 bash，我经常使用的 shell 是 zsh。二者在语言上的差异很小，只不过 zsh 具有更加良好的可扩展性，因而受到大家的青睐。")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$SHELL")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前使用的 shell")]),s._v("\n/bin/bash\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/shells "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前支持的 shell")]),s._v("\n/bin/sh\n/bin/bash\n/usr/bin/bash\n/bin/rbash\n/usr/bin/rbash\n/bin/dash\n/usr/bin/dash\n/usr/bin/tmux\n/usr/bin/screen\n")])])]),e("p",[s._v("通过以上两条命令，我们可以检查当前使用的 shell 以及系统支持的 shell。如果没有想要的 zsh 的话，可以使用 "),e("code",[s._v("sudo apt-get install zsh")]),s._v(" 来安装，再次执行 "),e("code",[s._v("cat /etc/shells")]),s._v(" 可以检查 zsh 是否安装成功。")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("chsh -s /bin/zsh\n")])])]),e("p",[s._v("以上命令将系统默认的 shell 设置为 zsh，要想查看效果，需要先退出 ssh 并重新登录。")]),s._v(" "),e("p",[s._v("重新登录之后，或者首次使用 zsh 命令激活该 shell，zsh 会检查到当前用户的根目录下不存在 .zshrc 文件，进而弹出 prompt 询问如何生成该文件，选择哪个都可以，大家自己读英文选就行了。")]),s._v(" "),e("h2",{attrs:{id:"zsh-效率插件推荐"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zsh-效率插件推荐"}},[s._v("#")]),s._v(" zsh 效率插件推荐")]),s._v(" "),e("p",[s._v("zsh 支持的插件挺多的，但是最常用的主要有以下几个：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("zsh-autosuggestions")]),s._v(" "),e("p",[s._v("该插件主要用于历史命令的自动提示与快速补全。对于你已经使用过的命令，他会在你下次输入该命令的一部分（必须从头开始匹配）时将后续命令以提示的方式显示出来，此时按下方向键右键即可快速补全。")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone --depth "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" -- https://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions\n")])])])]),s._v(" "),e("li",[e("p",[s._v("zsh-autocomplete")]),s._v(" "),e("p",[s._v("该插件主要用于根据已有的命令部分自动补全缺失的部分，如果存在多个可选，则全部列出，用户可以通过方向键选择，回车键确认。")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone --depth "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" -- https://github.com/marlonrichert/zsh-autocomplete.git ~/.zsh/zsh-autocomplete\n")])])])]),s._v(" "),e("li",[e("p",[s._v("zsh-syntax-highlighting")]),s._v(" "),e("p",[s._v("该插件主要用于对输入的命令进行语法高亮。")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone --depth "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" -- https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.zsh/zsh-syntax-highlighting\n")])])])])]),s._v(" "),e("p",[s._v("以上命令还只是将第三方插件下载到本地指定路径，要想在每次 ssh 到服务器时自动启用还需要在 "),e("code",[s._v("~/.zshrc")]),s._v(" 中进行配置，大家可以将这个文件类比为 Windows 系统下开机自运行软件的配置文件，即每次启动 zsh 时都会先执行一遍该配置文件中的脚本命令。")]),s._v(" "),e("p",[s._v("我们通过 "),e("code",[s._v("vim")]),s._v(" 命令将以下三行代码添加到 "),e("code",[s._v(".zshrc")]),s._v(" 文件中。")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.zsh/zsh-autocomplete/zsh-autocomplete.plugin.zsh\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n")])])]),e("h2",{attrs:{id:"zsh-美化插件推荐"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zsh-美化插件推荐"}},[s._v("#")]),s._v(" zsh 美化插件推荐")]),s._v(" "),e("p",[s._v("至于美化，其实就仁者见仁，智者见智了，如果你个人不喜欢花里胡哨，那么大可以跳过这一节。")]),s._v(" "),e("p",[s._v("如果你读到了这里，说明你对终端美化还有那么点想法，那么首先展示一下我个人的终端长这样。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(539),alt:"mac-iterm-oh-my-posh-profile"}})]),s._v(" "),e("p",[s._v("无论你是否喜欢，都请先读下去，在本节的最后，我会指出如何自定义自己的终端样式。")]),s._v(" "),e("p",[s._v("我个人采用的终端美化插件是 "),e("a",{attrs:{href:"https://ohmyposh.dev/",target:"_blank",rel:"noopener noreferrer"}},[s._v("oh-my-posh"),e("OutboundLink")],1),s._v("，之所以没有采用网上最最流行的 "),e("a",{attrs:{href:"https://ohmyz.sh/",target:"_blank",rel:"noopener noreferrer"}},[s._v("oh-my-zsh"),e("OutboundLink")],1),s._v(" 是因为我存在跨平台的需求。目前我在办公室使用的是 Windows 平台的 powershell core + Windows Terminal，在家里使用的是 Mac 平台的 zsh + ITerm，在各种云服务器上使用的是 zsh + 其他平台的终端工具，为了减少跨平台带来的割裂感，我希望能够只通过一份样式配置文件就能在不同平台的 shell 上展示一致的效果，oh-my-posh 恰恰提供了这样的功能。")]),s._v(" "),e("p",[s._v("安装 oh-my-posh")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -O /usr/local/bin/oh-my-posh\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/oh-my-posh\n")])])]),e("p",[s._v("安装完成之后，你可以直接将我现在使用的"),e("a",{attrs:{href:"https://gitee.com/taujiong/mac-dotfiles/blob/master/config/shared/Powerlevel10k.omp.json",target:"_blank",rel:"noopener noreferrer"}},[s._v("配置文件"),e("OutboundLink")],1),s._v("拷贝到服务器的任意位置，这里怎么拷贝就八仙过海，各显神通了。命令流使用 "),e("code",[s._v("scp")]),s._v("，工具流使用 putty，GUI 流使用 vscode。这里假设我把配置文件拷贝到了 "),e("code",[s._v("~/.zsh/Powerlevel10k.omp.json")]),s._v("。")]),s._v(" "),e("p",[s._v("下一步，就是在 "),e("code",[s._v(".zshrc")]),s._v(" 中启用 oh-my-posh 并配置指定的样式文件了。")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("eval")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("oh-my-posh --init --shell "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("zsh")]),s._v(" --config ~/.zsh/Powerlevel10k.omp.json"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n")])])]),e("p",[s._v("完成之后，通过命令 "),e("code",[s._v("source ~/.zshrc")]),s._v(" 或者重新 ssh 进入服务器就能够看到效果了。")]),s._v(" "),e("p",[s._v("关于样式自定义，如果你想采用 oh-my-posh，那么你就需要编写自己的 json 格式的样式配置文件，此时"),e("a",{attrs:{href:"https://ohmyposh.dev/docs/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),e("OutboundLink")],1),s._v("的 Configuration 和 Themes 章节就是你重点需要查阅的地方，我的配置文件可以作为参考去理解。")]),s._v(" "),e("p",[s._v("如果你想采用 oh-my-zsh，那么网上有大量的主题样式可供选择，我个人比较推荐 "),e("a",{attrs:{href:"https://github.com/romkatv/powerlevel10k",target:"_blank",rel:"noopener noreferrer"}},[s._v("powerlevel10k"),e("OutboundLink")],1),s._v("，因为它提供了十分方便的主题配置助手，在你首次应用时会提供大量的选项供你进行自助选择，实现一键生成样式主题。")]),s._v(" "),e("h2",{attrs:{id:"常用软件的介绍与安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用软件的介绍与安装"}},[s._v("#")]),s._v(" 常用软件的介绍与安装")]),s._v(" "),e("p",[s._v("关于常用软件，主要介绍两款，一款是用于构建大局域网的 zerotier-one，这个主要是方便我们组内的电脑相互之间的快捷连接；另一款是用于构建和部署其他应用的 Docker，这个主要是为了实现我们的服务器的可移植性，关于这一点，后面应该会有文章专门介绍，这里就不展开了。")]),s._v(" "),e("p",[s._v("偷个懒吧，这两款软件不想介绍了，关于怎么用大家去网上自行查阅吧，反正我也是这么过来的，这里只贴安装命令用于日常检索。")]),s._v(" "),e("h3",{attrs:{id:"zerotier-one"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zerotier-one"}},[s._v("#")]),s._v(" zerotier-one")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://www.zerotier.com/download/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方下载网址"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://raw.githubusercontent.com/zerotier/ZeroTierOne/master/doc/contact%40zerotier.com.gpg'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" gpg --import "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("z")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://install.zerotier.com/'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" gpg"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$z")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加入网络")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" zerotier-cli "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${network id}")]),s._v("\n")])])]),e("h3",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" docker")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://docs.docker.com/engine/install/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker 官方下载网址"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fsSL https://get.docker.com "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检测安装状态")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker version\n")])])]),e("p",[e("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker compose 官方下载网址"),e("OutboundLink")],1)]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/docker/compose/releases/download/latest/docker-compose-'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("-"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" -o /usr/local/bin/docker-compose\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 赋予执行权限")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检测安装状态")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" docker-compose --version\n")])])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("p",[s._v("说实话，这是一篇具有明显个人感情色彩的工具推荐文章，其目的在于帮助大家培养起构造自己工具链的意识，起一个抛砖引玉的作用。希望大家只借鉴而非全盘照抄，最终都能够形成自己独一无二的工作流。")]),s._v(" "),e("p",[s._v("以上。")])])}),[],!1,null,null,null);t.default=n.exports}}]);