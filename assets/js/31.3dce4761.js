(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{567:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-三维模型渲染问题-解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-三维模型渲染问题-解决方案"}},[t._v("#")]),t._v(" 1. 三维模型渲染问题，解决方案")]),t._v(" "),a("h3",{attrs:{id:"_1-1-三维静态模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-三维静态模型"}},[t._v("#")]),t._v(" 1.1 三维静态模型")]),t._v(" "),a("p",[t._v("（异步加载模型、前端放模型和后端传模型）")]),t._v(" "),a("p",[t._v("three.js是以WebGL为基础的库。创建场景=>配置灯光、相机=>导入模型=>设置材质=>渲染")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("文件本身处理："),a("strong",[t._v("gltf格式（gltf和glb）")]),t._v("，"),a("strong",[t._v("draco压缩")])]),t._v(" "),a("p",[a("strong",[t._v("obj（ascii）=>gltf（json+二进制）会输出两种文件类型")]),t._v(" ，ascii在内存中以二进制文件储存")])])]),t._v(" "),a("ul",[a("li",[t._v(".bin 文件，以"),a("strong",[t._v("二进制流的方式存储顶点坐标、顶点法线坐标")]),t._v("和贴图纹理坐标、贴图信息等模型基本数据信息；")]),t._v(" "),a("li",[t._v(".gltf 文件，"),a("strong",[t._v("本质是 json 文件，记录对bin文件中模型顶点基本数据的索引、材质索引等信息，方便编辑，可读性较好")]),t._v("；")])]),t._v(" "),a("p",[t._v("二进制数据，比如3D对象的几何数据和纹理数据通常不被包含在JSON文件中，它们被存储在外部的文件中。"),a("strong",[t._v("JSON文件中只包含了到这些外部文件的链接")]),t._v("。这使得"),a("strong",[t._v("二进制数据可以以非常紧凑的形式进行存储")]),t._v("方便互联网传输，并且可以直接被渲染程序使用，"),a("strong",[t._v("无需额外的解码、预处理")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("通过 Draco 压缩（blender、gltf-pipeline）基本上是有损的，有两点表现：")])]),t._v(" "),a("ul",[a("li",[t._v("Draco 通过 Edge breaker 3D 压缩算法"),a("strong",[t._v("改变了模型的网格数据的索引方法")]),t._v("，缺少了原来的网格顺序；")]),t._v(" "),a("li",[t._v("Draco 通过"),a("strong",[t._v("减少顶点坐标、顶点纹理坐标等信息的位数")]),t._v("，以减少数据的存储量。")])]),t._v(" "),a("ol",[a("li",[t._v("模型资源往往比较大，数据内容变动不大，可重复利用率不高。频繁请求比较浪费网络资源，加载到本地可以既可以节约请求，充分利用资源，并且可以节省用户下载时间，提高用户体验。区别不大")]),t._v(" "),a("li",[t._v("异步加载模型，three.js的api")]),t._v(" "),a("li",[t._v("文件分块加载（需要将大模型分为小块）")]),t._v(" "),a("li",[t._v("预加载，放到本地indexDB中")])]),t._v(" "),a("ul",[a("li",[t._v("localforage操作。")]),t._v(" "),a("li",[t._v("可以直接存储任何 js "),a("strong",[t._v("数据，包括blob（其实是支持结构化克隆的数据），不像")]),t._v(" storage 只能存放字符串")]),t._v(" "),a("li",[t._v("把图片或者 3D 模型文件转化成 Blob 格式的文件，存在 IndexedDB 中，就可以解决"),a("strong",[t._v("免去二次加载时网络请求的时间")]),t._v("。")]),t._v(" "),a("li",[t._v("当 3D 需要进行"),a("strong",[t._v("复杂计算时")]),t._v("，就可以利用 Service Worker 把一些数据存储在 IndexedDB 中或者"),a("strong",[t._v("通过 Web Worker 读取 IndexedDB 中的数据进行多线程计算。")])]),t._v(" "),a("li",[t._v("indexdb初始化=>获取连接=>根据请求生成key=>读取/写入数据=>每行加上过期时间=>在axios拦截器中判断有无缓存是否过期。")])]),t._v(" "),a("h3",{attrs:{id:"_1-2-三维仿真渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-三维仿真渲染"}},[t._v("#")]),t._v(" 1.2 三维仿真渲染")]),t._v(" "),a("p",[t._v("基于webGL的三维渲染的不足:")]),t._v(" "),a("p",[a("strong",[t._v("1、前端浏览体验和数据量有很大关系，需要花费大量的数据进行数据的轻量化以及切片处理;")])]),t._v(" "),a("p",[a("strong",[t._v("2、前端性能的稳定性不高，高负载的情况下容易出现崩溃；")])]),t._v(" "),a("p",[a("strong",[t._v("3、无法支持大分辨率的场景问题；")])]),t._v(" "),a("p",[t._v("导致问题: 仿真场景渲染等待时间过长,100多秒,不符合实时仿真要求;特别是移动端浏览器性能限制,容易崩溃")]),t._v(" "),a("p",[t._v("解决方案: "),a("strong",[t._v("三维“云渲染”方案-基于WebRTC的视频流推送技术")]),t._v(",Unity称之为RenderStreaming；")]),t._v(" "),a("p",[t._v("基本原理: 就是将场景通过后端渲染，然后采用实时视频流推送到网页端，并且能够实现前端到后端的交互同步。前端只要声明一个"),a("code",[t._v("<video></video>")]),t._v("标签就可以实现视频流的加载和交互。")]),t._v(" "),a("p",[t._v("通信原理: WebRTC建立点对点连接, 流数据传输需要一条信道，而这个信道则是由信令服务器提供的。这个信令服务器由SignalR实现,此外signalR会根据浏览器支持情况选择websocket,服务器推送,客户端轮询,还引入了断开重连机制.")]),t._v(" "),a("h2",{attrs:{id:"_2-首屏优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-首屏优化"}},[t._v("#")]),t._v(" 2. 首屏优化")]),t._v(" "),a("ol",[a("li",[t._v("合并文件、压缩文件请求，传输压缩gzip")]),t._v(" "),a("li",[t._v("cdn管理静态大文件")]),t._v(" "),a("li",[t._v("图片懒加载")]),t._v(" "),a("li",[t._v("模型异步加载")]),t._v(" "),a("li",[t._v("SSR服务器渲染")]),t._v(" "),a("li",[t._v("轻量库，组件尽量不全局引用")]),t._v(" "),a("li",[t._v("鱼骨屏")]),t._v(" "),a("li",[t._v("浏览器缓存")])]),t._v(" "),a("h2",{attrs:{id:"_3-隐藏元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-隐藏元素"}},[t._v("#")]),t._v(" 3. 隐藏元素")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两者区别")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"img"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("none\n    background"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 照片不会被请求、渲染")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("img src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"img.png"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("img"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("none "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 照片会被请求，不会渲染")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-定位元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-定位元素"}},[t._v("#")]),t._v(" 4. 定位元素")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11111")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22222")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nspan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("relative "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1111122222 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nspan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("absolute "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1111122222")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nspan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("fixed "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1111122222")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nspan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("relative "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1111122222")]),t._v("\n    left"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nspan"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    display"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("absolute "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重合，脱离文档流，相对于定位父元素，无则相对于html根元素")]),t._v("\n    left"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_5-闭包理解和节流函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-闭包理解和节流函数"}},[t._v("#")]),t._v(" 5. 闭包理解和节流函数")]),t._v(" "),a("ol",[a("li",[t._v("形式：函数返回函数、立即执行函数")]),t._v(" "),a("li",[t._v("作用：防止变量污染（全局变量多了容易冲突=>返回变量的getter和setter=>变量就不会被直接复制修改），变量常驻/泄露")]),t._v(" "),a("li",[t._v("用途：私有库开发、模块化、节流防抖等")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tro")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timeout\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delay"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_6-正则-电话号码脱敏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-正则-电话号码脱敏"}},[t._v("#")]),t._v(" 6. 正则-电话号码脱敏")]),t._v(" "),a("h3",{attrs:{id:"_6-1-正则基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-正则基础语法"}},[t._v("#")]),t._v(" 6.1 正则基础语法")]),t._v(" "),a("p",[t._v("正常情况下，正则表达式采用"),a("strong",[t._v("贪婪模式")]),t._v("，即，尽可能多的匹配。")]),t._v(" "),a("p",[t._v("精确个数：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("用"),a("code",[t._v("\\d")]),t._v("可以匹配一个数字")]),t._v("：'00\\d'可以匹配'007'，但无法匹配'00A'")]),t._v(" "),a("li",[a("strong",[t._v("用"),a("code",[t._v("\\w")]),t._v("可以匹配一个字母或数字")]),t._v("：'00\\w'可以匹配'007'和'00A'")]),t._v(" "),a("li",[a("strong",[t._v("用"),a("code",[t._v(".")]),t._v("可以匹配任意字符")]),t._v("：'00.'可以匹配'007'，'00A'，'00？'")])]),t._v(" "),a("p",[t._v("多个字符：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("用"),a("code",[t._v("\\*")]),t._v("表示任意个字符")]),t._v("（包括0个），")]),t._v(" "),a("li",[a("strong",[t._v("用"),a("code",[t._v("+")]),t._v("表示至少一个字符")]),t._v("：\\s可以匹配一个空格（也包括Tab等空白符），所以\\s+表示至少有一个空格")]),t._v(" "),a("li",[a("strong",[t._v("[^abc]表示不是字符a或b或c的内容")])]),t._v(" "),a("li",[a("strong",[t._v("用"),a("code",[t._v("?")]),t._v("表示0个或1个字符")]),t._v("，")]),t._v(" "),a("li",[a("strong",[t._v("用"),a("code",[t._v("{n}")]),t._v("表示n个字符")]),t._v("，")]),t._v(" "),a("li",[a("strong",[t._v("用"),a("code",[t._v("{n,m}")]),t._v("表示n-m个字符")]),t._v("：\\d{3,8}表示3-8个数字，例如'1234567'")])]),t._v(" "),a("p",[t._v("例子：匹配"),a("code",[t._v("'010-12345'")]),t._v("这样的号码呢？由于**"),a("code",[t._v("'-'")]),t._v("是特殊字符**，在正则表达式中，"),a("strong",[t._v("要用"),a("code",[t._v("'\\'")]),t._v("转义")]),t._v("，所以，上面的正则是"),a("code",[t._v("\\d{3}\\-\\d{3,8}")]),t._v("。")]),t._v(" "),a("p",[t._v("范围匹配：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("[0-9a-zA-Z\\_]")]),t._v("可以匹配一个数字、字母或者下划线；")]),t._v(" "),a("li",[a("code",[t._v("[0-9a-zA-Z\\_]+")]),t._v("可以匹配至少由一个数字、字母或者下划线组成的字符串，比如"),a("code",[t._v("'a100'")]),t._v("，"),a("code",[t._v("'0_Z'")]),t._v("，"),a("code",[t._v("'Py3000'")]),t._v("等等；")]),t._v(" "),a("li",[a("code",[t._v("[a-zA-Z\\_][0-9a-zA-Z\\_]*")]),t._v("可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；")]),t._v(" "),a("li",[a("code",[t._v("[a-zA-Z\\_][0-9a-zA-Z\\_]{0, 19}")]),t._v("更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。")]),t._v(" "),a("li",[a("code",[t._v("A|B")]),t._v("可以匹配A或B，所以"),a("code",[t._v("(P|p)ython")]),t._v("可以匹配"),a("code",[t._v("'Python'")]),t._v("或者"),a("code",[t._v("'python'")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("^")]),t._v("表示行的开头，"),a("code",[t._v("^\\d")]),t._v("表示必须以数字开头。")]),t._v(" "),a("li",[a("code",[t._v("$")]),t._v("表示行的结束，"),a("code",[t._v("\\d$")]),t._v("表示必须以数字结束。")])]),t._v(" "),a("p",[t._v("修饰符：g-全文搜索；i-忽略大小写； m-多行搜索；")]),t._v(" "),a("h3",{attrs:{id:"_6-2-创建方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-创建方法"}},[t._v("#")]),t._v(" 6.2 创建方法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字面量方式，其由包含在斜杠之间的模式组成，如下所示：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("ab+c")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数方式，调用RegExp对象的构造函数，如下所示：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" re "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ab+c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-3-使用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-使用方法"}},[t._v("#")]),t._v(" 6.3 使用方法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试字符是否满足正则表达式规则")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[123]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正则表达式和 String 对象之间的一个搜索匹配")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcdefg3sgbh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在一个指定字符串中执行一个搜索匹配")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcd456efg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遇到满足条件的就返回,[4]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个字符串匹配正则表达式的结果")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcd456efg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\d")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [456]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个由替换值（replacement）替换部分或所有的模式（pattern）匹配项后的新字符串。")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a1B2d3X4Z5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("[a-zA-Z]")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Q'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Q1Q3Q4Q5 只要匹配到符合规则的就返回")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-4-应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-应用"}},[t._v("#")]),t._v(" 6.4 应用")]),t._v(" "),a("h4",{attrs:{id:"_1-yyyy-mm-dd转为mm-dd-yyyy类型格式字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-yyyy-mm-dd转为mm-dd-yyyy类型格式字符串"}},[t._v("#")]),t._v(" 1. yyyy-MM-DD转为MM/DD/yyyy类型格式字符串")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2022-02-23'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(\\d{4})-(\\d{2})-(\\d{2})")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$3/$2/$1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将yyyy-MM-DD转换为MM/DD/yyyy")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"_2-电话脱敏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-电话脱敏"}},[t._v("#")]),t._v(" 2. 电话脱敏")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("desensitizeText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配文本中的手机号码，使用正则表达式")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" regex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("1\\d{10}")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将匹配到的手机号进行脱敏处理")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" match"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^(\\d{3})\\d{4}(\\d{4})$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1****$2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '$1****$2' 是一个替换的模板字符串。其中的 $1 和 $2 分别表示正则表达式中的第一个和第二个分组（即匹配到的3个数字和4个数字），**** 表示替换后的字符串。")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" text "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'这是一段文本内容，其中这个可能是手机号码15298750987，这个可能是个QQ号码98578242，这个可能是个普通的数字1532345322。这可能又是个手机号码 15298750988。'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("desensitizeText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出：这是一段文本内容，其中这个可能是手机号码152****0987，这个可能是个QQ号码98578242，这个可能是个普通的数字1532345322。这可能又是个手机号码 152****0988。")]),t._v("\n")])])]),a("h2",{attrs:{id:"_7-如何学习前端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-如何学习前端"}},[t._v("#")]),t._v(" 7. 如何学习前端")]),t._v(" "),a("h2",{attrs:{id:"_8-多人协同更改文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-多人协同更改文件"}},[t._v("#")]),t._v(" 8. 多人协同更改文件")]),t._v(" "),a("h3",{attrs:{id:"_8-1-编辑锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-编辑锁"}},[t._v("#")]),t._v(" 8.1 编辑锁")]),t._v(" "),a("p",[a("strong",[t._v("当有人在编辑某个文档时，系统会将这个文档锁定，避免其他人同时编辑")])]),t._v(" "),a("p",[t._v("实现：当用户 1 进入某个内容的编辑时，向服务端发送一个请求，服务端校验资源锁定人，为空则将该内容的申请人标记为锁定人1。其他用户访问该内容时，显示锁定人1 正在编辑当前内容而无法编辑，直至锁定人1编辑完毕将该内容解锁。")]),t._v(" "),a("h3",{attrs:{id:"_8-2-允许多人编辑-和覆盖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-允许多人编辑-和覆盖"}},[t._v("#")]),t._v(" 8.2 允许多人编辑，和覆盖")]),t._v(" "),a("p",[a("strong",[t._v("当用户编辑内容时，如果在编辑的过程中有其他用户提交了新的版本，则页面给出提示发生了版本变更，是否要覆盖")]),t._v("。")]),t._v(" "),a("p",[t._v("实现：用户获取内容时，服务端同时返回该内容的当前版本号。当用户保存时，将"),a("strong",[t._v("修改后内容和拿到的版本号一并提交")]),t._v("，服务端"),a("strong",[t._v("校验版本号与数据库中的版本号是否一致：")])]),t._v(" "),a("ul",[a("li",[t._v("若一致，表示在该用户编辑的过程中没有版本变更，直接保存成功")]),t._v(" "),a("li",[t._v("若"),a("strong",[t._v("不一致")]),t._v("，表示在该用户编辑的过程中发生了新的版本变更，"),a("strong",[t._v("保存失败并通知用户，用户可选择是否要进行覆盖")])])]),t._v(" "),a("h3",{attrs:{id:"_8-3-允许多人编辑-实时协同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-允许多人编辑-实时协同"}},[t._v("#")]),t._v(" 8.3 允许多人编辑，实时协同")]),t._v(" "),a("p",[t._v("例如各种在线文档，几乎都会采用协同编辑的方案，保证多人在线实时编辑。要实现协同编辑，主要需要实现几个关键技术点：")]),t._v(" "),a("p",[a("strong",[t._v("用于增量传输的 Diff 算法")]),t._v("：在协同编辑领域，常用的两种技术为 "),a("strong",[t._v("OT")]),t._v("(Operational Transformation) 和 "),a("strong",[t._v("CRDT")]),t._v(" (Conflict-free Replicated Data Type)")]),t._v(" "),a("p",[a("strong",[t._v("文档的实时更新")]),t._v("：可以采用 "),a("strong",[t._v("WebSocket")]),t._v(" 或者是轮询的方法，在追求性能和体验的情况下，通常我们会选择 WebSocket")]),t._v(" "),a("p",[t._v("**更新内容的富文本编辑器：**此项是可选的，通常多人在线编辑的场景需要支持丰富的内容编辑，因此需要一个富文本编辑器，普通的文本编辑场景不需要。")]),t._v(" "),a("p",[t._v("其中，"),a("strong",[t._v("OT")]),t._v(" 是多用于协同编辑领域的一种技术，正如其英文全称 Operational Transformation 一样，分为两个步骤：首先是"),a("strong",[t._v("将用户的编辑行为转换成可枚举的操作")]),t._v("(Operational)；如果是有"),a("strong",[t._v("多人操作同时进行，则对这些操作进行转换")]),t._v("(Transformation)。")]),t._v(" "),a("h2",{attrs:{id:"_9-如何计算localstorage的大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-如何计算localstorage的大小"}},[t._v("#")]),t._v(" 9. 如何计算localStorage的大小")]),t._v(" "),a("h3",{attrs:{id:"_9-1-计算总容量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-计算总容量"}},[t._v("#")]),t._v(" 9.1 计算总容量")]),t._v(" "),a("p",[t._v("不断往"),a("code",[t._v("localStorage")]),t._v("中累加存入"),a("code",[t._v("10KB")]),t._v("（10240字节，str.length==10240），等到超出最大存储时，会报错，那个时候统计出所有累积的大小，就是总存储量了！")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0123456789'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先做一个 10KB 的字符串")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10240")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0123456789'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先清空")]),t._v("\nlocalStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("computedTotal")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不断往 LocalStorage 中累积存储 10KB")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'temp'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错说明超出最大存储")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 统计完记得清空")]),t._v("\n        localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      temp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" str\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" total "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("computedTotal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("最大容量")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("total"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("KB")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_9-2-已用容量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-已用容量"}},[t._v("#")]),t._v(" 9.2 已用容量")]),t._v(" "),a("p",[t._v("即计算所有键值对所占空间。通过JSON.stringify将值转换为字符串，获取字符串长度，单位为字节")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLocalStorageSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" total "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" localStorage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    total "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLocalStorageSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);